buildscript {
    repositories {
        jcenter()
        
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.bmuschko:gradle-docker-plugin:3.2.6"
    }
}

apply plugin:  com.bmuschko.gradle.docker.DockerRemoteApiPlugin

// *****************************************************************************
//
// *****************************************************************************

import com.bmuschko.gradle.docker.tasks.image.DockerPullImage
import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerRemoveContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStopContainer

task pullImage(type: DockerPullImage) {
    repository = 'quay.io/coreos/etcd'
    tag = 'v2.3.7'
}

task createContainer(type: DockerCreateContainer) {
    dependsOn pullImage
    targetImageId {
        pullImage.getImageId()
    }

    portBindings = [
        '2379:2379',
        '4001:4001'
    ]
    cmd = [
        '-debug',
        '-advertise-client-urls',
        'http://localhost:2379,http://localhost:4001',
        '-listen-client-urls',
        'http://0.0.0.0:2379,http://0.0.0.0:4001'
    ]
}

task createContainerSsl(type: DockerCreateContainer) {
    dependsOn pullImage
    targetImageId {
        pullImage.getImageId()
    }

    portBindings = [
            '2378:2379',
            '4002:4001'
    ]
    binds = [
            "${rootDir}/src/test/resources/certs":'/tmp/ssl:Z'
    ]
    cmd = [
            '-debug',
            '-advertise-client-urls',
            'https://localhost:2379,https://localhost:4001',
            '-listen-client-urls',
            'https://0.0.0.0:2379,https://0.0.0.0:4001',
            '-trusted-ca-file',
            '/tmp/ssl/host.cert',
            '-cert-file',
            '/tmp/ssl/client.cert',
            '-key-file',
            '/tmp/ssl/host.key',
            '-peer-trusted-ca-file',
            '/tmp/ssl/host.cert',
            '-peer-cert-file',
            '/tmp/ssl/client.cert',
            '-peer-key-file',
            '/tmp/ssl/host.key',
            '-client-cert-auth',
            '-peer-client-cert-auth',
    ]
}

task startContainer(type: DockerStartContainer) {
    dependsOn createContainer
    targetContainerId {
        createContainer.getContainerId()
    }
}

task stopContainer(type: DockerStopContainer) {
    targetContainerId {
        createContainer.getContainerId()
    }
}

task removeContainer(type: DockerRemoveContainer) {
    dependsOn stopContainer
    targetContainerId {
        createContainer.getContainerId()
    }
}

task startContainerSsl(type: DockerStartContainer) {
    dependsOn createContainerSsl
    targetContainerId {
        createContainerSsl.getContainerId()
    }
}

task stopContainerSsl(type: DockerStopContainer) {
    targetContainerId {
        createContainerSsl.getContainerId()
    }
}

task removeContainerSsl(type: DockerRemoveContainer) {
    dependsOn stopContainerSsl
    targetContainerId {
        createContainerSsl.getContainerId()
    }
}

// *****************************************************************************
//
// *****************************************************************************

task dockerTest(type: Test) {
    dependsOn startContainer, startContainerSsl
    finalizedBy removeContainer, removeContainerSsl
}
